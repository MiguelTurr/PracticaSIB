match (u:Usuario {nombre: 'PepeCortez'})-[v:VISITA_PERFIL]->(j:Jugador) return u.nombre, j.nombre, v.veces;
match (u:Usuario {nombre: 'PepeCortez'})-[:LIKES]->(j:Jugador) return u.nombre, j.nombre;


MATCH (j:Jugador)-[:TIENE]->(c:Caracteristica {valor: 'Alto'}) RETURN j.nombre, j.altura;
MATCH (j:Jugador)-[:TIENE]->(c:Caracteristica {valor: 'Bajo'}) RETURN j.nombre, j.altura;
MATCH (j:Jugador)-[:TIENE]->(c:Caracteristica {valor: 'Buen cabeceador'}) RETURN j.nombre, j.altura, j.remate;

MATCH (j:Jugador)-[:TIENE]->(c:Caracteristica {valor: 'Playmaker'}) RETURN j.nombre, j.regates;


MATCH (j:Jugador {nombre: 'Gianluigi Donnarumma'})-[:TIENE]->(c:Caracteristica) RETURN c.valor;
MATCH (j:Jugador {nombre: 'Lionel Andrés Messi Cuccittini'})-[:TIENE]->(c:Caracteristica) RETURN c.valor;
MATCH (j:Jugador {nombre: 'Sergio Ramos García'})-[:TIENE]->(c:Caracteristica) RETURN c.valor;

MATCH (j:Jugador) return duration.between(date(j.fechaNacimiento),date()).years limit 10;


MATCH (j:Jugador) with j, (j.contrato - 2021) as caducaEn where caducaEn >= 5 return j.nombre, caducaEn;


MATCH (j:Jugador)-[r:JUEGA_COMO]->(:Posicion), (c:Caracteristica)
with j, c, count(r) as posiciones
WHERE posiciones >= 3 AND c.valor = 'Polivalente'
return j.nombre, posiciones;


MATCH (j1:Jugador {nombre: 'Gianluigi Donnarumma'})-[:TIENE]->(cuisine1)
WITH j1, collect(id(cuisine1)) AS j1Cuisine
MATCH (j2:Jugador)-[:JUEGA_COMO]->(:Posicion { posicion: 'GK'})
MATCH (j2)-[:TIENE]->(cuisine2) WHERE j1 <> j2
WITH j1, j1Cuisine, j2, collect(id(cuisine2)) AS j2Cuisine
RETURN j1.nombre AS from,
       j2.nombre AS to,
       gds.alpha.similarity.jaccard(j1Cuisine, j2Cuisine) AS similarity
ORDER BY similarity DESC limit 20;

MATCH (j1:Jugador {nombre: 'Lionel Andrés Messi Cuccittini'})-[:TIENE]->(cuisine1)
WITH j1, collect(id(cuisine1)) AS j1Cuisine
MATCH (j2:Jugador)-[:JUEGA_COMO]->(:Posicion { posicion: 'ST'})
MATCH (j2)-[:TIENE]->(cuisine2) WHERE j1 <> j2
WITH j1, j1Cuisine, j2, collect(id(cuisine2)) AS j2Cuisine
RETURN j1.nombre AS from,
       j2.nombre AS to,
       gds.alpha.similarity.jaccard(j1Cuisine, j2Cuisine) AS similarity
ORDER BY similarity DESC limit 20;


MATCH (j:Jugador)-[:JUEGA_COMO]->(:Posicion { posicion: 'GK'})
return j.nombre, j.porteroGolpeo, j.porteroParada, j.porteroPosicion, j.porteroReflejos, j.porteroSalto;

MATCH (j:Jugador)-[:JUEGA_COMO]->(:Posicion { posicion: 'CM'})
return j.nombre limit 10;


euclideo xd

MATCH (p1:Jugador {nombre: 'Gianluigi Donnarumma'})
MATCH (p2:Jugador)-[:JUEGA_COMO]->(:Posicion { posicion: 'GK'}) WHERE p1 <> p2 
RETURN p1.nombre AS from,
       p2.nombre AS to,
       gds.alpha.similarity.euclideanDistance([p1.altura, p1.porteroSalto, p1.porteroParada, p1.porteroGolpeo, p1.valor],
       [p2.altura, p2.porteroSalto, p2.porteroParada, p2.porteroGolpeo, p2.valor]) AS similarity,
       p1.valor,
       p2.valor
       order by similarity
       limit 7;